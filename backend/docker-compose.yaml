version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-cloud_album}
      POSTGRES_USER: ${DB_USER:-cloud}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-cloud}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-cloud} -d ${DB_NAME:-cloud_album}"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - redis_data:/data

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: .env
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    restart: always

  celery:
    build: .
    command: celery -A core worker --loglevel=info
    env_file: .env
    depends_on:
      - web
      - redis
    restart: always
  flower:
    image: mher/flower
    command: flower --broker=${REDIS_URL/\/1/\/0}
    ports:
      - "5555:5555"
    depends_on:
      - redis
  nginx:
    image: nginx:1.27
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/app/static:ro
      - media_data:/app/media:ro
    restart: always

volumes:
  db_data:
  redis_data:
  static_data:
  media_data:
